// Adaptive mixin

@mixin desktop() {
  @media (min-width: 1201px) {
    @content;
  }
}

@mixin tablet() {
  @media (max-width:1200px) {
    @content;
  }
}

@mixin tablet_only() {
  @media (min-width: 900px) and (max-width:1200px) {
    @content;
  }
}

@mixin mobile() {
  @media (max-width: 899px) {
    @content;
  }
}

@mixin mobile5s() {
  @media (max-width: 600px) {
    @content;
  }
}

// end adaptiv

// Animation _active class
// fade from right
@mixin fadeL() {
  transform: translateX(-200%);
  opacity: 0;
  transition: all 1.2s ease 0.3s;
}
// fade from right
@mixin fadeR() {
  transform: translateX(200%);
  opacity: 0;
  transition: all 1.2s ease 0.3s;
}
// Fade
@mixin fadeActive() {
  transform: translateX(0);
  opacity: 1;
  transition: all 1.2s ease 0.3s;
}
// end animation

//Адаптивное свойство

$maxWidth: 1440;
$maxWidthContainer: 1000;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}